name: Fly Deploy
permissions:
  contents: read
on:
  workflow_run:
    workflows: ["Neon Database Branch Management"]
    types:
      - completed
  push:
    branches-ignore:
      - main
    paths:
      - apps/api/**
      - packages/**
      - "!packages/email/**"
      - "!packages/ui/**"
jobs:
  deploy:
    name: 🚀 Deploy to Fly Preview
    runs-on: ubuntu-latest
    concurrency: fly-preview
    # Only run if triggered by push OR if Neon workflow succeeded
    if: |
      github.event_name == 'push' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    steps:
      - uses: actions/checkout@v4
      
      # Download Neon database info if this was triggered by workflow_run
      - name: Download Neon Database Info
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: neon-preview-db-info-${{ github.event.workflow_run.pull_requests[0].number }}
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      # Set environment variables for deployment
      - name: Set Database URL from Neon
        if: github.event_name == 'workflow_run'
        run: |
          if [ -f database_url.txt ]; then
            DATABASE_URL=$(cat database_url.txt)
            echo "DATABASE_URL=${DATABASE_URL}" >> $GITHUB_ENV
            echo "Using Neon preview database"
          fi
      
      # Get Vercel preview URL using GitHub Action
      - name: Get Vercel Preview URL
        if: github.event_name == 'workflow_run'
        id: vercel_url
        uses: zentered/vercel-preview-url@v1.1.9
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
      
      # Set CORS origins from Vercel URL
      - name: Set Preview CORS Origins
        if: github.event_name == 'workflow_run'
        run: |
          VERCEL_URL="${{ steps.vercel_url.outputs.preview_url }}"
          echo "Configuring CORS for: ${VERCEL_URL}"
          echo "CORS_ORIGINS=${VERCEL_URL}" >> $GITHUB_ENV
          echo "TRUSTED_ORIGINS=${VERCEL_URL}" >> $GITHUB_ENV
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      # TODO: Add pricing engine build when implemented
      # - name: 🏗 Build pricing engine
      #   run: bunx turbo run build --filter=@durchrechnen/pricing-engine...
      - name: 🔦 Run linter
        run: bun run lint
        working-directory: ./apps/api
      - name: 🪐 Check TypeScript
        run: bun run typecheck
        working-directory: ./apps/api
      # - name: 🧪 Run unit tests
      #   run: bun run test
      #   working-directory: ./apps/api
      - uses: superfly/flyctl-actions/setup-flyctl@master
      
      # Set dynamic secrets for staging deployment
      - name: Update Fly.io Secrets for Preview
        if: github.event_name == 'workflow_run'
        run: |
          flyctl secrets set \
            DATABASE_URL="${DATABASE_URL}" \
            CORS_ORIGINS="${CORS_ORIGINS}" \
            TRUSTED_ORIGINS="${TRUSTED_ORIGINS}" \
            --app durchrechnen-api-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - run: flyctl deploy --remote-only --dockerfile apps/api/Dockerfile --config apps/api/fly-preview.yml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}